// import React,{useEffect, useState} from 'react';
import {useNavigate,useLocation } from 'react-router-dom';

// import Select, { components } from 'react-select';

import React,{useState,useEffect} from 'react';



import {
  Button,
  Table
} from 'reactstrap';

import ComponentCard from '../../../components/ComponentCard';


const Edit= () => {
  const location = useLocation();
  const  id = location.state || {};
  const navigate= useNavigate();
  const [data, setData] = useState([]); 

const handleEditAdd = () => {
  navigate('/order/customers/address/add',{state: id});
};

const handleEditAddress = (customer)=>{
  const newCustomerId = id;
  customer.newCustomerId = newCustomerId ;
  console.log('address',id, location.state);
  console.log('address',customer);
   navigate('/order/customers/address/edit', {state: customer.id });
 } 

 const handleDeleteClick = async (itemId) => {
  try {
    // Call your API endpoint to delete the item
    const token = localStorage.getItem('userToken');
    const response = await fetch(`https://factory.teamasia.in/api/public/addresses/${itemId}`, {
      method: 'DELETE',
      headers: {
        'Authorization': `Bearer ${token}`
      }
    });

    // Check if the request was successful
    if (!response.ok) {
      throw new Error(`Error: ${response.statusText}`);
    }

    // Filter out the deleted item from your data state
    const updatedData = data.filter((item) => item.id !== itemId);
    setData(updatedData);

    console.log('Item deleted successfully');
  } catch (error) {
    //only checks for error that are generated by fetch function , and cors 
    console.error('Failed to delete the item', error);
  }
};



useEffect(() => {
  
  // Fetch the data from the API
  const fetchData = async () => {
    const token = localStorage.getItem('userToken');
    // console.log('token',token);
    const response = await fetch(`https://factory.teamasia.in/api/public/addresses/?customer_id=${id}`, {
      method: 'GET', 
      headers: {
        'Authorization': `Bearer ${token}`
      }
    });
    // console.log('result',response);
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    const result = await response.json();
    console.log("responsejson",result);
    setData(result.addresses); 
  };

  fetchData();


},[]);

  return (

    <ComponentCard
    title=""
    subtitle={
      <p>
        {/* Overview of the projects */}
      </p>
    }
  >
       <Table responsive>        
                  <thead>
                      <tr>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td>
                                   <Button className='my-btn-color' onClick={() => handleEditAdd()}>
                                     Add Address
                                   </Button>
                                </td>
                              
                        </tr>
                        <tr>
                        
                                  <td >Address</td>
                                  <td>City</td>
                                  <td >State</td>
                                  <td >Actions</td>
                        </tr>
                      </thead>
          
              <tbody>
              {data.map((customer) => (
                  <tr key={customer.id}>
                        <td>
                          {customer.address_line_1}
                        </td>
                        <td>
                          {customer.city_name}
                        </td>
                        <td>
                          {customer.state_name}
                        </td>
                        <td>
                          <button type="button" className="btn mybtncustomer btn-secondary btn-sm mr-2" onClick={() => handleEditAddress(customer)}><i className="bi bi-pencil-fill my-pen-color" /></button><button type="button" className="btn mybtncustomer btn-secondary btn-sm mr-2" onClick={() => handleDeleteClick(customer.id)}><i className="bi bi-trash-fill my-trash-color" /></button>
                        </td>
                                         
                  </tr>
                ))}
                
              </tbody>
            </Table>
  </ComponentCard>



   
   
  );
};

export default Edit